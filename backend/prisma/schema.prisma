generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Person {
  id                  String    @id @default(uuid())
  username            String    @unique
  password            String
  firstName           String
  lastName            String
  dateOfBirth         DateTime
  heartRate           Int
  bloodPressure       String
  breathRate          Int
  temperature         Float
  bloodType           String
  occupation          String
  weight              Float
  height              Float
  gender              String
  isMedicalPractitioner Boolean

  diseases            PersonDisease[] // Relatie via tussenmodel
  doctorConsultations   Consultation[] @relation("DoctorConsultations")
  patientConsultations  Consultation[] @relation("PatientConsultations")
}

model Disease {
  id                 String   @id
  name               String
  symptoms           String
  type               String
  infectious         Boolean
  isAcute            Boolean
  duration           Int
  incubationPeriod   Int

  persons            PersonDisease[] // Relatie via tussenmodel
}

model Consultation {
  id          String   @id @default(uuid())
  date        DateTime @default(now())
  diagnosis   String
  doctorId    String
  patientId   String

  doctor      Person   @relation("DoctorConsultations", fields: [doctorId], references: [id])
  patient     Person   @relation("PatientConsultations", fields: [patientId], references: [id])
}



// **Tussenmodel voor many-to-many relatie**
model PersonDisease {
  personId  String
  diseaseId String

  person   Person   @relation(fields: [personId], references: [id], onDelete: Cascade)
  disease  Disease  @relation(fields: [diseaseId], references: [id], onDelete: Cascade)

  @@id([personId, diseaseId]) // Composite primary key
}